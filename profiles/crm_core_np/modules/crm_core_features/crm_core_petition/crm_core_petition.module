<?php

/**
 * @file
 * Code for the CRM Core Petition feature.
 */

include_once 'crm_core_petition.features.inc';

/**
 * Implements hook_menu
 */
function crm_core_petition_menu() {
  $items = array();
  $items['petition/%node/thank-you'] = array(
    'title callback' => 'crm_core_petition_thankyou_page_title',
    'page callback' => 'crm_core_petition_thankyou_page',
    'title arguments' => array(1),
    'page arguments' => array(1),
    'access arguments' => array('crm_core sign online petition'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_menu_alter
 */
function crm_core_petition_menu_alter(&$items) {
  $items['crm/contact/%/activity']['type'] = MENU_LOCAL_TASK;
  $items['crm/contact/%/activity/all'] = array(
    'title' => 'All',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['crm/contact/%/activity/petitions']['type'] = MENU_LOCAL_TASK;
  $items['crm/contact/%/activity/petitions']['context'] = MENU_CONTEXT_PAGE;
}

/**
 * Implements hook_permission
 */
function crm_core_petition_permission() {
  return array(
    'crm_core sign online petition' => array(
      'title' => t('Allow online petition signing'),
      'description' => t('Ability to use petition signing form on online peition pages'),
    ),
  );  
}

/**
 * Implements hook_node_view
 */
function crm_core_petition_node_view(&$node, $view_mode) {

  if (!user_access('crm_core sign online petition')) {
    return;  
  }  

  // let's embed the petition signing form on the online petition content itself
  if ($node->type == 'online_petition') {
    $crm_core_profile = crm_core_profile_load('petition_signing_form');
    if (!empty($crm_core_profile)) {
      module_load_include('inc', 'crm_core_profile', 'crm_core_profile.forms');
      $node->content['crm_core_petition_form'] = drupal_get_form('crm_core_profile_entry_form', $crm_core_profile);      
      $node->content['crm_core_petition_form']['#weight'] = 999;
    }  
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function crm_core_petition_form_crm_core_profile_entry_form_alter(&$form, &$form_state, $form_id) {
  $profile = $form_state['profile'];

  // making sure we are on the correct crm_core_profile
  if ($profile['name'] != 'petition_signing_form') {
    return;
  }

  // adding css class to the form for additional style customization
  if (empty($form['#attributes']['class'])) {
    $form['#attributes']['class'] = array('crm_core_petition_signing_form');
  }
  else {
    $form['#attributes']['class'] += array('crm_core_petition_signing_form');
  }
  
  // Change the form button value and hide some of the address components
  $form['submit']['#value'] = t('Sign the petition');

  $form['#submit'][] = 'crm_core_petition_form_crm_core_profile_entry_form_submit';
  
  $form['field_contact_address'][LANGUAGE_NONE][0]['street_block']['#access'] = FALSE;
  $form['field_contact_address'][LANGUAGE_NONE][0]['locality_block']['postal_code']['#access'] = FALSE;
  $form['field_contact_address'][LANGUAGE_NONE][0]['country']['#access'] = FALSE;   
}

/**
 * Implements submit callback for "Petition Signing" form
 */
function crm_core_petition_form_crm_core_profile_entry_form_submit($form, &$form_state) {
  $petition_nid = $form_state['values']['activity']['field_crm_petition_reference'][LANGUAGE_NONE][0]['target_id'];
  $petition = node_load($petition_nid);

  // redirect user to specific page if it's setup, otherwise send him to the default "Thank you" page
  if (isset($petition->field_crm_petition_redirect_path[LANGUAGE_NONE])) {
    $form_state['redirect'] = $petition->field_crm_petition_redirect_path[LANGUAGE_NONE][0]['url'];
  } else {
    $form_state['redirect'] = 'petition/' . $petition_nid . '/thank-you';
  }
}

/**
 * Implements hook_crm_core_profile_activity_alter().
 *
 * We are just setting some default value to the crm_core_profile form in the activity data container
 * the $form here refers to the $form['activity'] data container from the original crm_core_profile form
 */
function crm_core_petition_crm_core_profile_activity_alter(&$form, $profile_name) {  
  if ($profile_name != 'petition_signing_form') {
    return;  
  }
  
  // since we are embedding the online petition form in the content itself, we can get the content information
  // as well
  $node = menu_get_object();
  
  // we are just setting the reference (association) of the activity back to the petition content
  $default_value = sprintf('%s (%s)', $node->title, $node->nid);
  $form['field_crm_petition_reference'][LANGUAGE_NONE][0]['target_id']['#default_value'] = $default_value;
}

/**
 * Callback function for default "Thank you" page title.
 */
function crm_core_petition_thankyou_page_title($petition) {
  return t('Petition @name signing.', array('@name' => $petition->title));
}

/**
 * Callback function for default "Thank you" page.
 */
function crm_core_petition_thankyou_page($petition) {
  return t('Thank you for signing the "@name" petition.', array('@name' => $petition->title));
}